{"version":3,"sources":["assets/leo.png","components/private/Main/CodeButton/CodeButton.js","components/global/Loading/LoadingComponent.js","components/private/Main/StudentCard/StudentCard.js","utils/jsonwebtoken.js","constants/endpoint.js","components/private/Main/Main.js","components/private/QRCode/QRCode.js","constants/base64format.js","components/private/Main/Drawer/Drawer.js","components/private/Copyright/Copyright.js","components/private/AdminPage/AdminPage.js","components/PrivateComponent.js","components/public/login2/LoginDrawer/LoginDrawer.js","components/public/login2/Login2.js","components/public/NewAccount/NewAccountDrawer/NewAccountDrawer.js","components/public/NewAccount/VerifyPhone/VerifyPhone.js","components/public/NewAccount/NewAccount.js","components/public/IntranetVerifyView/IntranetVerifyView.js","components/PublicComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Container","styled","button","Border","div","props","loading","Icon","i","CodeButton","QRCodeOn","disabled","onClick","className","override","css","AwesomeLoadingComponent","this","sizeUnit","size","color","React","Component","Card","Upper","Lower","NormalText","ProfilePhoto","img","Name","status","BoldText","MobileIDCard","Logo","Margin","BasicInfo","Row","BasicInfoLabel","BasicInfoText","LoadingContainer","WhitePartInLoading","GrayPartInLoading","UserEmail","StudentCard","user","id","src","require","name","email","major","grade","generateJsonWebToken","password","jwt","sign","decodeJsonWebToken","token","verify","REST_API_ENDPOINT","interval","timeout","FirstPrivatePage","view","TextContainer","LeftTime","CodeContainer","QrCodeImage","QRCodeComponent","state","leftTime","qrcodeImg","setWrapperRef","bind","handleClickOutside","decoded","window","localStorage","getItem","Axios","post","then","res","data","console","log","is_ok","setState","result","anime","targets","translateY","setInterval","setTimeout","QRCodeOff","catch","err","error","document","addEventListener","clearInterval","clearTimeout","removeEventListener","node","wrapperRef","event","contains","target","ref","KBUText","MenuItem","p","XButton","DrawerComponent","visible","placement","showDrawer","onClose","onChange","e","value","logout","href","title","closable","style","textDecoration","AdminPage","handleScan","handleError","delay","onError","onScan","width","PrivateComponent","QRCode","gender","img_height","img_width","phone","userId","userPassword","alert","removeItem","location","Drawer","path","Main","LoginDrawer","to","InputContainer","Login2Component","buttonDisabled","loginButtonClicked","axios","setItem","message","handleInput","getElementById","length","placeholder","prefix","type","suffix","Password","tiktok","NewAccountDrawer","Time","Input","input","VerifyPhoneComponent","verifyCode","verifyButtonClicked","phoneNumber","studentId","ok","verifyPhone","turnDownVerifyPhoneComponent","parseInt","position","top","NewAccount","password2","phoneVerified","phoneVerifiedButton","verifiyPhoneNumberView","newAccountButtonClicked","turnOnVerifyPhoneComponent","turnOnIntranetVerify","intranetVerified","VerifyPhone","InputsContainer","IntranetVerifyView","intranetId","intranetPassword","verifyIntranetAccount","turnDownIntranetVerify","PublicComponent","verifyPhoneComponentView","intranetVerifyView","exact","Login2","App","isLoggedIn","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.49f4d5d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/leo.b47f7b0e.png\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.button`  \n    color: white;\n    border: 0;\n    border-radius: 5px;\n    font-size: 29px;\n    outline:none;\n    font-weight: 600;\n    cursor: pointer;\n    position: relative;\n    top: 2px;\n    background: transparent;\n`\n\nconst Border = styled.div`\n    \n    border-radius:5px;\n    border :${props => props.loading ? '1px solid gray' : '1px solid #e67e22'} ;\n`\n\nconst Icon = styled.i`\n    color:${props => props.loading ? 'gray' : '#1e3799'};\n    font-size:50px;\n`\n\nconst CodeButton = ({ QRCodeOn, loading }) => <Border loading={loading}>\n    <Container disabled={loading} onClick={QRCodeOn}>\n        <Icon loading={loading} className={'fas fa-qrcode'} />\n    </Container>\n</Border>\n\nexport default CodeButton","import React from 'react';\nimport { css } from '@emotion/core'\nimport { PacmanLoader } from 'react-spinners'\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width:100%;\n    height:100%;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n`\n\nconst override = css`\n    position: relative;\n    right:20px;\n    bottom:20px;\n`\n\nclass AwesomeLoadingComponent extends React.Component {\n    render() {\n        const { loading } = this.props;\n        return <Container>\n            <PacmanLoader\n                css={override}\n                sizeUnit={\"px\"}\n                size={40}\n                color={'#36D7B7'}\n                loading={true}\n            />\n        </Container>\n\n    }\n}\n\nexport default AwesomeLoadingComponent","import React from 'react';\nimport styled from 'styled-components';\nimport AwesomeLoadingComponent from 'components/global/Loading/LoadingComponent';\n\nconst Container = styled.div`\n    display:flex;\n    width:100%;\n    flex-direction:column;\n    align-items:center;\n    background:#ecf0f1;\n    padding-top:25px;\n    padding-bottom:10px;\n    \n`\n\nconst Card = styled.div`\n    background:white;\n    width:85%;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    -webkit-box-shadow: 0px 0px 5px -1px rgba(0,0,0,0.75);\n-moz-box-shadow: 0px 0px 5px -1px rgba(0,0,0,0.75);\nbox-shadow: 0px 0px 5px -1px rgba(0,0,0,0.75);\n`\n\nconst Upper = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    width:100%;\n    border-bottom: 1px solid gainsboro;\n    height:206px;\n`\n\nconst Lower = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    background:#f5f6fa;\n    width:100%;\n    padding-bottom:10px;\n    height:211px;\n`\n\nconst NormalText = styled.div`\n    margin-top: 15px;\n    margin-bottom: 10px;\n    letter-spacing: 0.7px;\n    font-family: 'Nanum Gothic', sans-serif;\nfont-family: 'Nanum Gothic Coding', monospace;\n`\n\nconst ProfilePhoto = styled.img`\n    width: 130px;\n    height: 130px;\n    border-radius: 15%;\n    object-fit: cover;\n    margin-bottom: 15px;\n`\n\nconst Name = styled.div`\n    font-size: 19px;\n    margin-top: 10px;\n    font-weight: 600;\n    color: ${props => props.status === '재학' ? '#487eb0' : '#e74c3c'} ;\n    font-family: 'Nanum Gothic', sans-serif;\n`\n\nconst BoldText = styled.div`\n    font-weight: 700;\n`\n\nconst UnivMark = styled.img`\n    width:90px;\n`\n\nconst MobileIDCard = styled.div`\n    margin-top: 10px;\n    font-size: 11px;\n    line-height: 20px;\n    letter-spacing: 4px;\n    margin-bottom: 10px;\n    font-weight: 500;\n`\n\nconst ArrowContainer = styled.div`\n    display:flex;\n    margin-bottom:20px;\n`\n\nconst UpperArrow = styled.i`\n    \n`\n\nconst LowerArrow = styled.i`\n    color:#dcdde1;\n    \n`\nconst Logo = styled.div`\n    font-weight: 700;\n`\n\nconst Margin = styled.div`\n    height:20px;\n`\n\nconst BasicInfo = styled.div`\n    display:flex;\n    flex-direction:column;\n    margin-bottom: 12px;\n    width: 150px;\n    align-items: flex-start;\n`\n\nconst Row = styled.div`\n    display:flex;\n    align-items:center;\n    width:100%;\n    position: relative;\n    justify-content:center;\n`\nconst BasicInfoLabel = styled.div`\n    font-family: 'Nanum Gothic', sans-serif;\n    font-family: 'Nanum Gothic Coding', monospace;\n    font-weight:900;\n    position: absolute;\n    left:0px;\n    \n`\n\nconst BasicInfoText = styled.div`\n    font-family: 'Nanum Gothic', sans-serif;\n    font-family: 'Nanum Gothic Coding', monospace;\n    \n`\n\nconst LoadingContainer = styled.div`\n    height:417px;\n    width:100%;\n    position: relative;\n`\n\nconst WhitePartInLoading = styled.div`\n    width:100%;\n    position: absolute;\n    top:0;\n    display:flex;\n    align-items:center;\n    height:206px;\n    border-bottom: 1px solid gainsboro;\n`\n\nconst GrayPartInLoading = styled.div`\n    height:211px;\n    position: absolute;\n    bottom:0;\n    width:100%;\n    display:flex;\n    align-items:center;\n    background:#f5f6fa;\n`\n\nconst UserEmail = styled.div``\n\n\nclass StudentCard extends React.Component {\n    render() {\n        const { user, loading } = this.props;\n        return <Container>\n            <Card>\n                {loading ? <LoadingContainer>\n                    <WhitePartInLoading />\n                    <GrayPartInLoading />\n                    <AwesomeLoadingComponent loading={loading} />\n                </LoadingContainer> : <>\n\n                        <Upper>\n                            <MobileIDCard>MOBILE ID CARD</MobileIDCard>\n                            <Margin />\n                            {user.id === '201303024' && <ProfilePhoto src={require('assets/leo.png')} />}\n                            {user.id !== '201303024' &&\n                                <ProfilePhoto src={user.img ? 'data:image/png;base64,' + user.img : 'https://user-images.githubusercontent.com/11250/39013954-f5091c3a-43e6-11e8-9cac-37cf8e8c8e4e.jpg'} />\n                            }\n\n                        </Upper>\n                        <Lower>\n                            <Name status={user.status}>{user.name}</Name>\n                            <BoldText>{user.id}</BoldText>\n                            <UserEmail>\n                                {user.email}\n                            </UserEmail>\n                            <NormalText>{user.major}</NormalText>\n                            {/* <UnivMark src={require('assets/한국성서대학교.png')} /> */}\n                            <BasicInfo>\n                                <Row>\n                                    <BasicInfoLabel>\n                                        학년\n                                </BasicInfoLabel>\n                                    <BasicInfoText>\n                                        {user.grade}\n                                    </BasicInfoText>\n                                </Row>\n                                <Row>\n                                    <BasicInfoLabel>\n                                        상태\n                                </BasicInfoLabel>\n                                    <BasicInfoText>\n                                        {user.status}\n                                    </BasicInfoText>\n                                </Row>\n\n\n                            </BasicInfo>\n                            <Logo>KOREAN BIBLE UNIVERSITY</Logo>\n                        </Lower>\n                    </>}\n            </Card>\n        </Container>\n    }\n}\n\nexport default StudentCard","import jwt from 'jsonwebtoken';\n\nexport const generateJsonWebToken = (id, password) => {\n    const token = jwt.sign({ password, id }, '1234567890123456')\n    return token;\n}\n\nexport const decodeJsonWebToken = token => {\n    const decoded = jwt.verify(token, '1234567890123456');\n    return decoded;\n}","let REST_API_ENDPOINT = 'http://localhost:4000/api/'\n\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n    // dev code\n} else {\n    // production code\n    REST_API_ENDPOINT = 'http://ec2-15-164-165-139.ap-northeast-2.compute.amazonaws.com/api/'\n}\n\nexport default REST_API_ENDPOINT","import React from 'react';\nimport styled from 'styled-components';\nimport CodeButton from './CodeButton/CodeButton';\nimport StudentCard from './StudentCard/StudentCard';\nimport { decodeJsonWebToken } from 'utils/jsonwebtoken';\nimport Axios from 'axios';\nimport REST_API_ENDPOINT from 'constants/endpoint';\n\n\nconst Container = styled.div`\n    width:100%;\n    min-height:80vh;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n`\n\nclass FirstPrivatePage extends React.Component {\n\n\n\n\n    render() {\n        const { QRCodeOn, user, loading } = this.props;\n\n        return <Container>\n            <StudentCard loading={loading} user={user} />\n\n            <br />\n            <br />\n            <br />\n            <CodeButton loading={loading} QRCodeOn={QRCodeOn} />\n        </Container>\n    }\n}\n\nexport default FirstPrivatePage","import React from 'react';\nimport styled from 'styled-components';\nimport QRCode from 'qrcode.react';\nimport anime from 'animejs/lib/anime.es.js';\nimport Axios from 'axios';\nimport REST_API_ENDPOINT from 'constants/endpoint';\nimport { decodeJsonWebToken } from 'utils/jsonwebtoken';\nimport base64format from 'constants/base64format'\n\nlet interval\nlet timeout\n\nconst Container = styled.div`\n    position:fixed;\n    top:0;\n    left:0;\n    height:100%;\n    width:100%;\n    background:rgba(0,0,0,0.7);\n    /* opacity:${props => props.view ? 1 : 0}; */\n    transition:0.3s;\n    /* display:${props => props.view ? \"flex\" : \"none\"}; */\n    opacity:1;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    flex-direction:column;\n`\n\nconst DateText = styled.div`\n    color:white;\n`\n\nconst TextContainer = styled.div`\n    position:relative;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n    bottom:50px;\n    font-family: 'Roboto', sans-serif;\nfont-family: 'Nanum Gothic', sans-serif;\nfont-size:19px;\nfont-style:normal;\nletter-spacing:normal;\n`\n\nconst LeftTime = styled.div`\n    color:white;\n    position: relative;\n    top: 18px;\n    font-size: 30px;\n    font-weight: 800;\n`\n\nconst CodeContainer = styled.div`\n    position:relative;\n    top:500px;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n`\n\nconst QrCodeImage = styled.img`\n    width:280px;\n    \n`\n\n// I think I will need web or socket.io server here\n// Because I have to get signal when the server received QR code information \n\nclass QRCodeComponent extends React.Component {\n\n    state = {\n        leftTime: 15,\n        loading: true,\n        qrcodeImg: \"\"\n    }\n\n\n\n\n    constructor(props) {\n        super(props);\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n\n    componentDidMount() {\n        const decoded = decodeJsonWebToken(window.localStorage.getItem('token'));\n        Axios.post(REST_API_ENDPOINT + 'qr/', {\n            id: decoded.id,\n            password: decoded.password\n        }).then(res => res.data)\n            .then(data => {\n                console.log(data)\n                if (data.is_ok) {\n\n                    this.setState({\n                        qrcodeImg: base64format + data.result.img,\n                        loading: false\n                    })\n\n\n                    // 여기부터\n                    anime({\n                        targets: '.qrcode-container',\n                        translateY: -500\n                    })\n\n                    this.setState({\n                        leftTime: 15\n                    })\n\n                    interval = setInterval(() => {\n                        this.setState({\n                            leftTime: this.state.leftTime - 1\n                        })\n                    }, 1000);\n\n                    timeout = setTimeout(() => {\n                        const { QRCodeOff } = this.props;\n                        QRCodeOff()\n                    }, 15000);\n                    // 여기까지 loading false 로 바꾸면 그때부터 시작\n\n                } else {\n\n                }\n\n            }).catch(err => console.error(err))\n\n\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n\n        clearInterval(interval)\n        clearTimeout(timeout)\n\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        anime({\n            targets: '.qrcode-container',\n            translateY: 500\n        })\n    }\n\n    /**\n     * Set the wrapper ref\n     */\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n    }\n\n    /**\n     * Alert if clicked on outside of element\n     */\n    handleClickOutside(event) {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            const { QRCodeOff } = this.props;\n            QRCodeOff()\n        }\n    }\n\n\n    render() {\n        const { view } = this.props;\n        const { leftTime, loading, qrcodeImg } = this.state;\n        return <Container view={view}>\n            {loading ? '' : <>\n\n                <TextContainer>\n                    {/* <DateText>\n                        {'2019년 12월 24일 11시 55분 58초에'}\n                    </DateText> */}\n                    {/* <DateText>{'만료됩니다.'}</DateText> */}\n                    <LeftTime>\n                        {leftTime}\n                    </LeftTime>\n                </TextContainer>\n                <CodeContainer className={'qrcode-container'} ref={this.setWrapperRef}>\n                    {/* 이부분을 나중에 이미지로 대체합니다.  */}\n                    {/* <QRCode\n                        size={200}\n                        value={'https://www.dgsh.nl/'} /> */}\n                    <QrCodeImage src={qrcodeImg} />\n                </CodeContainer>\n            </>}\n        </Container>\n    }\n}\n\nexport default QRCodeComponent;","const base64format = 'data:image/png;base64,'\nexport default base64format","import React from 'react';\nimport { Drawer, Button, Radio } from 'antd';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width:100%;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    position: relative;\n    height:50px;\n    background:#1e3799;\n    -webkit-box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.75);\n-moz-box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.75);\nbox-shadow: 0px 0px 5px 0px rgba(0,0,0,0.75);\n`\n\nconst Icon = styled.i`\n    font-size: 30px;\n    cursor: pointer;\n    position: absolute;\n    left:30px;\n    color:white;\n`\n\nconst KBUImage = styled.img`\n    width:100px;\n`\n\nconst KBUText = styled.div`\n    color:white;\n    font-size: 20px;\n    font-weight: 700;\n`\n\nconst MenuItem = styled.p`\n    cursor: pointer;\n`\n\nconst XButton = styled.i`\n    position: absolute;\n    right: 15px;\n    top: 14px;\n    font-size: 26px;\n    cursor: pointer;\n`\n\nclass DrawerComponent extends React.Component {\n    state = { visible: false, placement: 'left' };\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    onChange = e => {\n        this.setState({\n            placement: e.target.value,\n        });\n    };\n\n    render() {\n        const { logout, user } = this.props;\n        return (\n            <Container>\n\n                <a href={'/'}>\n                    {/* <KBUImage src={require('assets/한국성서대학교2.png')} /> */}\n                    <KBUText>Korea Bible University</KBUText>\n                </a>\n\n                <Icon className={'fas fa-bars'} onClick={this.showDrawer} />\n\n                <Drawer\n                    title=\"MENU\"\n                    placement={this.state.placement}\n                    closable={false}\n                    onClose={this.onClose}\n                    visible={this.state.visible}\n                >\n                    <XButton onClick={this.onClose} className={'fas fa-times'} />\n                    <MenuItem>이경민</MenuItem>\n                    <MenuItem>신동규</MenuItem>\n                    <MenuItem>신민철</MenuItem>\n                    {(user.id === '201303024' || user.id === '201504018' || user.id === '201504021') && <a style={{\n                        textDecoration: 'none',\n                        color: 'black'\n                    }} href={'/admin'}>\n                        <MenuItem>관리자 페이지</MenuItem>\n                    </a>}\n\n                    <MenuItem onClick={logout}>로그아웃</MenuItem>\n                </Drawer>\n            </Container>\n        );\n    }\n\n\n}\n\nexport default DrawerComponent","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n    width:100%;\n    height:100px;\n    text-transform:uppercase;\n    font-weight: 600;\n    \n`\n\nconst CopyrightComponent = () => <Container>\n    Copyright(C) 2019. 피자호빵. All Rights reserved.\n</Container>\n\nexport default CopyrightComponent","import React from 'react';\nimport styled from 'styled-components';\nimport QrReader from 'react-qr-reader';\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n`\n\nclass AdminPage extends React.Component {\n\n    state = {\n        result: 'No result'\n    }\n    render() {\n        return <Container>\n            <QrReader\n                delay={300}\n                onError={this.handleError}\n                onScan={this.handleScan}\n                style={{\n                    width: '100%'\n                }}\n            />\n            <p>{this.state.result}</p>\n        </Container>\n    }\n\n    handleScan = data => {\n        if (data) {\n            this.setState({\n                result: data\n            })\n            // Send data to arduino server\n        }\n    }\n    handleError = err => {\n        console.error(err)\n    }\n}\n\nexport default AdminPage","import React from 'react';\nimport Main from './private/Main/Main';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport QRCodeComponent from './private/QRCode/QRCode';\nimport anime from 'animejs/lib/anime.es.js';\nimport DrawerComponent from './private/Main/Drawer/Drawer';\nimport CopyrightComponent from './private/Copyright/Copyright';\nimport AdminPage from './private/AdminPage/AdminPage';\nimport styled from 'styled-components'\nimport { decodeJsonWebToken } from 'utils/jsonwebtoken';\nimport Axios from 'axios';\nimport REST_API_ENDPOINT from 'constants/endpoint';\n\nconst RedLine = styled.div`\n    height:4px;\n    width:100%;\n    background:#c0392b;\n`\n\n\nclass PrivateComponent extends React.Component {\n\n    state = {\n        QRCode: false,\n        user: {\n            email: \"\",\n            gender: \"\",\n            grade: \"\",\n            id: \"\",\n            img: \"\",\n            img_height: 0,\n            img_width: 0,\n            major: \"\",\n            phone: \"\",\n            status: \"\",\n            name: \"\"\n        },\n        loading: true\n    }\n\n    componentDidMount() {\n        const decoded = decodeJsonWebToken(window.localStorage.getItem(\"token\"));\n        const userId = decoded.id;\n        const userPassword = decoded.password;\n        if (userId && userPassword) {\n            Axios.post(REST_API_ENDPOINT + 'user/getuser', {\n                id: userId,\n                password: userPassword\n            }).then(res => res.data)\n                .then(data => {\n                    console.log(data)\n                    if (data.is_ok) {\n                        this.setState({\n                            user: data.result,\n                            loading: false\n                        })\n                    } else {\n                        alert('정보를 불러오는데 실패하였습니다. ')\n                        window.localStorage.removeItem('token');\n                        window.location.href = '/'\n                    }\n                })\n                .catch(err => console.error(err))\n        }\n    }\n\n    render() {\n        const { QRCode, user, loading } = this.state;\n        const { QRCodeOn, QRCodeOff } = this;\n        const { logout } = this.props;\n        return <Router>\n            <DrawerComponent user={user} logout={logout} />\n            {/* <RedLine /> */}\n            <Switch>\n                <Route path=\"/admin\">\n                    <AdminPage />\n                </Route>\n                <Route path=\"/\">\n                    <Main user={user} loading={loading} QRCodeOn={QRCodeOn} />\n                </Route>\n                <Route>\n                    <Main />\n                </Route>\n\n            </Switch>\n            {/* <CopyrightComponent /> */}\n            {QRCode && <QRCodeComponent QRCodeOff={QRCodeOff} view={QRCode} />}\n\n        </Router>\n    }\n\n    QRCodeOn = () => {\n        this.setState({\n            QRCode: true\n        })\n\n    }\n\n    QRCodeOff = () => {\n        this.setState({\n            QRCode: false\n        })\n        anime({\n            targets: '.qrcode-container',\n            translateY: 500\n        })\n    }\n}\n\nexport default PrivateComponent","\nimport React from 'react';\nimport { Drawer } from 'antd';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom'\n\n\nconst Container = styled.div`\n    position: absolute;\n    top: 10px;\n    left: 10px;\n`\n\nconst Icon = styled.div`\n    font-size: 30px;\n    cursor: pointer;\n    position: absolute;\n    left:10px;\n    color:#b2bec3;\n`\n\nconst XButton = styled.i`\n    position: absolute;\n    right: 15px;\n    top: 14px;\n    font-size: 26px;\n    cursor: pointer;\n`\n\nclass LoginDrawer extends React.Component {\n    state = { visible: false, placement: 'left' };\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    onChange = e => {\n        this.setState({\n            placement: e.target.value,\n        });\n    };\n\n    render() {\n        return (\n            <Container>\n                <Icon className={'fas fa-bars'} onClick={this.showDrawer} />\n                <Drawer\n                    title=\"MENU\"\n                    placement={this.state.placement}\n                    closable={false}\n                    onClose={this.onClose}\n                    visible={this.state.visible}\n                >\n                    <XButton onClick={this.onClose} className={'fas fa-times'} />\n                    <Link style={{\n                        textDecoration: 'none',\n                        color: 'black'\n                    }} to={'/new'}>\n                        <p>회원가입</p>\n                    </Link>\n                </Drawer>\n            </Container>\n        );\n    }\n}\n\nexport default LoginDrawer;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Input, Tooltip, Icon, Button } from 'antd';\nimport LoginDrawer from './LoginDrawer/LoginDrawer';\nimport axios from 'axios'\nimport REST_API_ENDPOINT from 'constants/endpoint';\nimport { generateJsonWebToken } from 'utils/jsonwebtoken';\n\n\n\nconst Container = styled.div`\n    width:100%;\n    height:85vh;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n`\n\nconst InputContainer = styled.div`\n    display:flex;\n    flex-direction:column;\n    width:80%;\n`\n\n\n\nclass Login2Component extends React.Component {\n\n    state = {\n        id: \"\",\n        password: \"\",\n        buttonDisabled: true\n    }\n\n    render() {\n        const { id, password, buttonDisabled } = this.state;\n        const { handleInput, loginButtonClicked } = this;\n        return <Container>\n            <LoginDrawer />\n            <InputContainer>\n                <Input\n                    id={'id'}\n                    value={id}\n                    name={'id'}\n                    className={'input'}\n                    onChange={handleInput}\n                    placeholder=\"아이디\"\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    suffix={\n                        <Tooltip title=\"Extra information\">\n                            <Icon type=\"info-circle\" style={{ color: 'rgba(0,0,0,.45)' }} />\n                        </Tooltip>\n                    }\n                />\n                <br />\n                <br />\n                <Input.Password\n                    id={'password'}\n                    value={password}\n                    name={'password'}\n                    onChange={handleInput}\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    className={'input'} placeholder=\"비밀번호\" />\n\n                <br />\n                <br />\n                <Button onClick={loginButtonClicked} className={'button'} disabled={buttonDisabled} type={\"primary\"}>LOGIN</Button>\n            </InputContainer>\n        </Container>\n    }\n\n    loginButtonClicked = () => {\n        const { id, password } = this.state;\n        axios.post(REST_API_ENDPOINT + `user/login`, {\n            id,\n            password\n        }).then(res => res.data)\n            .then(result => {\n                console.log(result);\n                if (result.is_ok) {\n                    const token = generateJsonWebToken(id, password);\n                    console.log('token: ', token);\n                    window.localStorage.setItem('token', token)\n                    window.location.href = '/'\n                } else {\n                    alert(result.result)\n                    this.setState({\n                        id: \"\",\n                        password: \"\"\n                    })\n                    return;\n                }\n\n            })\n            .catch(err => console.error(err.message))\n    }\n\n    handleInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n        const id = document.getElementById('id').value;\n        const password = document.getElementById('password').value;\n        if (id.length >= 4 && password.length >= 4) {\n            this.setState({\n                buttonDisabled: false\n            })\n        } else {\n            this.setState({\n                buttonDisabled: true\n            })\n        }\n    }\n}\n\nexport default Login2Component;","\nimport React from 'react';\nimport { Drawer } from 'antd';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom'\n\n\nconst Container = styled.div`\n    position: absolute;\n    top: 10px;\n    left: 10px;\n`\n\nconst Icon = styled.div`\n    font-size: 30px;\n    cursor: pointer;\n    position: absolute;\n    left:10px;\n    color:#b2bec3;\n`\n\nconst XButton = styled.i`\n    position: absolute;\n    right: 15px;\n    top: 14px;\n    font-size: 26px;\n    cursor: pointer;\n`\n\nclass NewAccountDrawer extends React.Component {\n    state = { visible: false, placement: 'left' };\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    onChange = e => {\n        this.setState({\n            placement: e.target.value,\n        });\n    };\n\n    render() {\n        return (\n            <Container>\n                <Icon className={'fas fa-bars'} onClick={this.showDrawer} />\n                <Drawer\n                    title=\"MENU\"\n                    placement={this.state.placement}\n                    closable={false}\n                    onClose={this.onClose}\n                    visible={this.state.visible}\n                >\n                    <XButton onClick={this.onClose} className={'fas fa-times'} />\n                    <Link style={{\n                        textDecoration: 'none',\n                        color: 'black'\n                    }} to={'/'}>\n                        <p>로그인</p>\n                    </Link>\n                </Drawer>\n            </Container>\n        );\n    }\n}\n\nexport default NewAccountDrawer;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Button } from 'antd'\nimport axios from 'axios';\nimport REST_API_ENDPOINT from 'constants/endpoint';\n\nlet tiktok\n\nconst Container = styled.div`\n    position:fixed;\n    z-index:3;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    background:rgba(0,0,0,0.7);\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n`\n\nconst Card = styled.div`\n    width:90%;\n    height:400px;\n    background:white;\n    opacity:1;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n`\n\nconst Time = styled.div`\n    font-size: 20px;\n    color: #74b9ff;\n    font-weight: 500;\n    position: relative;\n    bottom: 50px;\n`\n\nconst Row = styled.div`\n    display:flex;\n    align-items:center;\n`\n\nconst Input = styled.input`\n    outline: none;\n    text-align: center;\n    font-size: 29px;\n    margin-top: 0px;\n    background: #fff;\n    border: none;\n    box-shadow: inset 0 0 0 2px #0079bf;\n`\n\n\n\n\n\nclass VerifyPhoneComponent extends React.Component {\n\n    state = {\n        leftTime: 180,\n        verifyCode: \"\"\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n\n    componentDidMount() {\n        const {\n            name,\n            studentId,\n            phoneNumber\n        } = this.props;\n\n        this.setState({\n            leftTime: 180\n        })\n\n        axios.post(REST_API_ENDPOINT + 'verifyphone/', {\n            name,\n            studentId,\n            phoneNumber\n        }).then(res => res.data)\n            .then(data => {\n                const { ok, error } = data;\n                if (ok) {\n                    // Doing nothing\n                } else {\n                    alert(error)\n                }\n            })\n            .catch(err => console.error(err))\n\n        document.addEventListener('mousedown', this.handleClickOutside);\n        const { turnDownVerifyPhoneComponent } = this.props;\n        tiktok = setInterval(() => {\n            this.setState({\n                leftTime: this.state.leftTime - 1\n            })\n            if (this.state.leftTime === 0) {\n                this.setState({\n                    leftTime: 180\n                })\n                turnDownVerifyPhoneComponent()\n            }\n        }, 1000);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        clearInterval(tiktok);\n    }\n\n    /**\n     * Set the wrapper ref\n     */\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n    }\n\n    /**\n     * Alert if clicked on outside of element\n     */\n    handleClickOutside(event) {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            const { turnDownVerifyPhoneComponent } = this.props;\n            turnDownVerifyPhoneComponent()\n        }\n    }\n\n\n    render() {\n        const { leftTime, verifyCode } = this.state;\n        const { handleInput, verifyButtonClicked } = this;\n        return <Container>\n            <Card ref={this.setWrapperRef}>\n                <Time>{parseInt(leftTime / 60)} : {(leftTime % 60) > 9 ? parseInt(leftTime % 60) : '0' + parseInt(leftTime % 60)}</Time>\n\n                <Input onChange={handleInput} placeholder={'0629'} value={verifyCode} name={'verifyCode'} />\n                <Button\n                    onClick={verifyButtonClicked}\n                    style={{\n                        position: 'relative',\n                        top: 43,\n                        width: 200\n                    }} type={\"primary\"}>인증</Button>\n\n            </Card>\n        </Container>\n    }\n\n    handleInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    verifyButtonClicked = () => {\n        const { verifyCode } = this.state;\n        const {\n            name,\n            studentId,\n            phoneNumber\n        } = this.props;\n\n        axios.post(REST_API_ENDPOINT + 'verifyphone/verify', {\n            verifyCode,\n            phoneNumber\n        }).then(res => res.data)\n            .then(data => {\n                const { ok, error } = data;\n                if (ok) {\n                    alert('인증이 완료되었습니다. ')\n                    // 인증 완료\n                    const { verifyPhone } = this.props;\n                    verifyPhone()\n                } else {\n                    alert(error)\n                }\n            })\n            .catch(err => console.error(err))\n\n    }\n}\n\nexport default VerifyPhoneComponent","import React from 'react';\nimport styled from 'styled-components';\nimport { Input, Icon, Button } from 'antd';\nimport NewAccountDrawer from './NewAccountDrawer/NewAccountDrawer';\nimport VerifyPhoneComponent from './VerifyPhone/VerifyPhone';\nimport axios from 'axios'\nimport REST_API_ENDPOINT from 'constants/endpoint';\n\nconst Container = styled.div`\n    width:100%;\n    margin-top:70px;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:flex-end;\n`\n\nconst InputContainer = styled.div`\n    display:flex;\n    flex-direction:column;\n    width:80%;\n`\n\nclass NewAccount extends React.Component {\n\n    state = {\n        id: \"\",\n        password: \"\",\n        password2: \"\",\n        buttonDisabled: true,\n        name: \"\",\n        studentId: \"\",\n        phoneNumber: \"\",\n        phoneVerified: false,\n        phoneVerifiedButton: true,\n        verifiyPhoneNumberView: false\n\n    }\n\n\n    render() {\n        const { id, password, buttonDisabled, password2, name, studentId, phoneNumber,\n            phoneVerifiedButton,\n            phoneVerified,\n            verifiyPhoneNumberView\n        } = this.state;\n        const { handleInput, turnOnVerifyPhoneComponent, turnDownVerifyPhoneComponent, verifyPhone } = this;\n        const {\n\n            turnOnIntranetVerify,\n            intranetVerified\n        } = this.props;\n        const { newAccountButtonClicked } = this;\n        return <Container>\n\n            <NewAccountDrawer />\n            <InputContainer>\n                <Button onClick={turnOnIntranetVerify} disabled={intranetVerified} type={'primary'}>인트라넷 인증</Button>\n                <br />\n\n\n                <Input\n                    id={'name'}\n                    value={name}\n                    name={'name'}\n                    className={'input'}\n                    onChange={handleInput}\n                    placeholder=\"이름\"\n                    disabled={true}\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n\n                />\n\n\n                <br />\n\n\n                <Input\n                    id={'studentId'}\n                    value={studentId}\n                    name={'studentId'}\n                    onChange={handleInput}\n                    disabled={true}\n                    prefix={<Icon type=\"idcard\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    className={'input'} placeholder=\"학번\" />\n\n                <br />\n                {phoneVerified ? <Input\n                    id={'id'}\n                    value={id}\n                    name={'id'}\n                    onChange={handleInput}\n                    disabled={true}\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    className={'input'} placeholder=\"아이디\" /> : <Input\n                        id={'id'}\n                        value={id}\n                        name={'id'}\n                        onChange={handleInput}\n                        disabled={!intranetVerified}\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        className={'input'} placeholder=\"아이디\" />}\n\n                <br />\n                {phoneVerified ? <Input.Password\n                    id={'password'}\n                    value={password}\n                    name={'password'}\n                    onChange={handleInput}\n                    disabled={true}\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    className={'input'} placeholder=\"비밀번호\" /> : <Input.Password\n                        id={'password'}\n                        value={password}\n                        name={'password'}\n                        onChange={handleInput}\n                        disabled={!intranetVerified}\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        className={'input'} placeholder=\"비밀번호\" />}\n\n                <br />\n                {phoneVerified ? <Input.Password\n                    id={'password2'}\n                    value={password2}\n                    name={'password2'}\n                    onChange={handleInput}\n                    disabled={true}\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    className={'input'} placeholder=\"비밀번호 확인\" /> : <Input.Password\n                        id={'password2'}\n                        value={password2}\n                        name={'password2'}\n                        onChange={handleInput}\n                        disabled={!intranetVerified}\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        className={'input'} placeholder=\"비밀번호 확인\" />}\n\n                <br />\n\n\n                <Input\n                    id={'phoneNumber'}\n                    value={phoneNumber}\n                    name={'phoneNumber'}\n                    onChange={handleInput}\n                    disabled={true}\n                    prefix={<Icon type=\"phone\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    className={'input'} placeholder=\"핸드폰 번호\" />\n\n                <br />\n                {phoneVerified === false && <Button onClick={turnOnVerifyPhoneComponent} className={'button'} disabled={phoneVerifiedButton} type={\"primary\"}>핸드폰 번호 인증</Button>}\n\n                <br />\n                <br />\n                <Button className={'button'} disabled={buttonDisabled} onClick={newAccountButtonClicked} type={\"primary\"}>회원가입</Button>\n            </InputContainer>\n            {verifiyPhoneNumberView && <VerifyPhoneComponent\n                verifyPhone={verifyPhone}\n                name={name}\n                studentId={studentId}\n                phoneNumber={phoneNumber}\n                turnDownVerifyPhoneComponent={turnDownVerifyPhoneComponent}\n\n            />\n\n            }\n        </Container>\n    }\n\n    newAccountButtonClicked = () => {\n        const { name, studentId, id, password, phoneNumber } = this.state;\n        axios.post(REST_API_ENDPOINT + `user/`, {\n            name,\n            studentId,\n            id,\n            password,\n            phoneNumber\n        })\n            .then(res => res.data)\n            .then(data => {\n                const { ok, error, token } = data;\n                if (ok) {\n                    window.localStorage.setItem('token', token)\n                    window.location.href = \"/\"\n                } else {\n                    alert(error)\n                }\n            })\n            .catch(err => console.error(err))\n    }\n\n    verifyPhone = () => {\n        this.setState({\n            phoneVerified: true,\n            buttonDisabled: false\n        })\n        console.log('here!')\n        console.log(this.state.buttonDisabled)\n        this.turnDownVerifyPhoneComponent();\n    }\n\n\n    turnOnVerifyPhoneComponent = () => {\n        this.setState({\n            verifiyPhoneNumberView: true\n        })\n    }\n\n    turnDownVerifyPhoneComponent = () => {\n        this.setState({\n            verifiyPhoneNumberView: false,\n\n        })\n    }\n\n\n\n\n    handleInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n        const { phoneVerified } = this.state;\n\n        // 핸드폰 인증을 완료해놓고 핸드폰 번호를 바꾸면 핸드폰 verified 를 취소시킴\n        if (phoneVerified) {\n            if (e.target.name === 'phoneNumber') {\n                this.setState({\n                    phoneVerified: false\n                })\n            }\n        }\n\n\n        const id = document.getElementById('id').value;\n        const password = document.getElementById('password').value;\n        const password2 = document.getElementById('password2').value;\n        const studentId = document.getElementById('studentId').value;\n        const name = document.getElementById('name').value;\n        const phoneNumber = document.getElementById('phoneNumber').value;\n        // 핸드폰 본인 인증 버튼 활성화 체크\n        if (phoneNumber.length === 11) {\n            // 인트라넷 실제 정보와 유저가 기입한 정보가 서로 어느정도 일치하는지 확인 후 \n            // phoneVerifiedButton을 false로 바꿔주고 그렇지 않은 경우에는 모두\n            // true 로 바꿔준다.\n            this.setState({\n                phoneVerifiedButton: false\n            })\n        } else {\n            this.setState({\n                phoneVerifiedButton: true\n            })\n        }\n\n        if (phoneVerified && id.length >= 4 && password.length >= 8 && password2.length >= 8 && studentId.length >= 9 && name.length >= 1 && phoneNumber.length >= 10) {\n            this.setState({\n                buttonDisabled: false\n            })\n        } else {\n            this.setState({\n                buttonDisabled: true\n            })\n        }\n    }\n\n\n\n}\n\nexport default NewAccount;","import React from 'react';\nimport styled from 'styled-components';\nimport { Input, Button } from 'antd'\n\nconst Container = styled.div`\n    position:fixed;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    z-index:3;\n    background:rgba(0,0,0,0.7); \n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n`\n\nconst Card = styled.div`\n    width:80%;\n    height:400px;\n    background:white;\n    border-radius:3px;\n    color:black;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n`\n\nconst InputsContainer = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    width:80%;\n`\n\nclass IntranetVerifyView extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    /**\n     * Set the wrapper ref\n     */\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n    }\n\n    /**\n     * Alert if clicked on outside of element\n     */\n    handleClickOutside(event) {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            const { turnDownIntranetVerify } = this.props;\n            turnDownIntranetVerify()\n\n        }\n    }\n\n    state = {\n        intranetId: \"\",\n        intranetPassword: \"\"\n    }\n\n    render() {\n        const {\n            intranetId,\n            intranetPassword\n        } = this.state;\n        const { handleInput, verifyButtonClicked } = this;\n        return <Container>\n            <Card ref={this.setWrapperRef}>\n                <InputsContainer>\n                    <br />\n                    <Input\n                        onChange={handleInput}\n                        name={'intranetId'} value={intranetId} placeholder={'인트라넷 아이디'} />\n                    <br />\n                    <Input.Password\n                        onChange={handleInput}\n                        name={'intranetPassword'} value={intranetPassword} placeholder={'인트라넷 비밀번호'} />\n                    <br />\n                </InputsContainer>\n                <Button onClick={verifyButtonClicked}>인증하기</Button>\n            </Card>\n        </Container>\n    }\n\n    verifyButtonClicked = () => {\n        const { intranetPassword, intranetId } = this.state\n        const { verifyIntranetAccount, turnDownIntranetVerify } = this.props;\n\n\n        verifyIntranetAccount(intranetId, intranetPassword)\n        turnDownIntranetVerify()\n\n        this.setState({\n            intranetId: \"\",\n            intranetPassword: \"\"\n        })\n    }\n\n    handleInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n}\n\nexport default IntranetVerifyView","import React from 'react';\nimport styled from 'styled-components';\nimport Login2Component from './public/login2/Login2';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport CopyrightComponent from './private/Copyright/Copyright';\nimport NewAccount from './public/NewAccount/NewAccount';\nimport IntranetVerifyView from './public/IntranetVerifyView/IntranetVerifyView';\nimport Axios from 'axios';\nimport REST_API_ENDPOINT from 'constants/endpoint';\n\n\nclass PublicComponent extends React.Component {\n    state = {\n        verifyPhoneComponentView: false,\n        intranetVerifyView: false,\n        intranetVerified: false,\n        name: \"\",\n        phoneNumber: \"\"\n    }\n    render() {\n        const { turnDownVerifyPhoneComponent, turnOnVerifyPhoneComponent,\n            turnOnIntranetVerify,\n            turnDownIntranetVerify,\n            verifyIntranetAccount\n        } = this;\n        const { verifyPhoneComponentView, intranetVerifyView, intranetVerified } = this.state;\n        return <Router>\n\n            <Switch>\n                <Route exact path={'/'}>\n                    <Login2Component />\n                </Route>\n                <Route path={'/new'}>\n                    <NewAccount\n                        turnDownVerifyPhoneComponent={turnDownVerifyPhoneComponent}\n                        turnOnVerifyPhoneComponent={turnOnVerifyPhoneComponent}\n                        turnOnIntranetVerify={turnOnIntranetVerify}\n                        intranetVerified={intranetVerified}\n                    />\n                </Route>\n                <Route>\n                    <Login2Component />\n                </Route>\n            </Switch>\n            {/* <CopyrightComponent /> */}\n            {/* {verifyPhoneComponentView && <VerifyPhoneComponent turnDownVerifyPhoneComponent={turnDownVerifyPhoneComponent} />} */}\n            {intranetVerifyView && <IntranetVerifyView verifyIntranetAccount={verifyIntranetAccount} turnDownIntranetVerify={turnDownIntranetVerify} />}\n        </Router>\n    }\n\n    verifyIntranetAccount = (id, password) => {\n\n        // Send intranet id and password to server\n        // And get response. \n\n        Axios.post(REST_API_ENDPOINT + 'user//verify/intranet', {\n            id,\n            password\n        })\n            .then(res => res.data)\n            .then(result => {\n\n                const { ok, error, data } = result;\n                console.log('data: ', data)\n                if (ok) {\n                    this.setState({\n                        intranetVerified: true\n                    })\n                } else {\n\n                }\n\n            })\n            .catch(err => console.error(err))\n\n\n\n    }\n\n    turnOnIntranetVerify = () => {\n        this.setState({\n            intranetVerifyView: true\n        })\n    }\n\n    turnDownIntranetVerify = () => {\n        this.setState({\n            intranetVerifyView: false\n        })\n    }\n\n    turnOnVerifyPhoneComponent = () => {\n        this.setState({\n            verifyPhoneComponentView: true\n        })\n    }\n\n    turnDownVerifyPhoneComponent = () => {\n        this.setState({\n            verifyPhoneComponentView: false\n        })\n    }\n}\n\nexport default PublicComponent","import React from 'react';\nimport styled from 'styled-components';\nimport PrivateComponent from 'components/PrivateComponent';\nimport PublicComponent from 'components/PublicComponent';\n\nconst Container = styled.div``\n\nclass App extends React.Component {\n  state = {\n    isLoggedIn: localStorage.getItem('token') ? true : false\n  }\n  render() {\n    const { isLoggedIn } = this.state;\n    const { logout } = this;\n    return (\n      <Container>\n        {isLoggedIn ? <PrivateComponent logout={logout} /> : <PublicComponent />}\n      </Container>\n    );\n  }\n\n  logout = () => {\n    this.setState({\n      isLoggedIn: false\n    })\n    window.localStorage.removeItem('token')\n    window.location.href = \"/\"\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport 'index.css';\nimport 'antd/dist/antd.css';\nimport * as serviceWorker from 'serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}